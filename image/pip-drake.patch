diff --git a/tools/workspace/liblapack/repository.bzl b/tools/workspace/liblapack/repository.bzl
index 212c2ee2a..012eb36f2 100644
--- a/tools/workspace/liblapack/repository.bzl
+++ b/tools/workspace/liblapack/repository.bzl
@@ -36,6 +36,7 @@ liblapack_repository = repository_rule(
     attrs = {
         "modname": attr.string(default = "lapack"),
         "licenses": attr.string_list(default = ["notice"]),  # BSD-3-Clause
+        "extra_linkopts": attr.string_list(default = ["-lblas", "-lgfortran"]),
     },
     local = True,
     configure = True,
diff --git a/tools/workspace/libtiff/repository.bzl b/tools/workspace/libtiff/repository.bzl
index 40cd5eeab..faee93df2 100644
--- a/tools/workspace/libtiff/repository.bzl
+++ b/tools/workspace/libtiff/repository.bzl
@@ -16,5 +16,6 @@ def libtiff_repository(
         licenses = licenses,
         modname = modname,
         pkg_config_paths = pkg_config_paths,
+        extra_linkopts = ['-llzma'],
         **kwargs
     )
diff --git a/tools/workspace/nlopt/repository.bzl b/tools/workspace/nlopt/repository.bzl
index 806467365..30d2a7979 100644
--- a/tools/workspace/nlopt/repository.bzl
+++ b/tools/workspace/nlopt/repository.bzl
@@ -20,8 +20,8 @@ def _impl(repository_ctx):
         )
     elif os_result.is_ubuntu:
         build_flavor = "ubuntu-{}".format(os_result.ubuntu_release)
-        repository_ctx.symlink("/usr/include/nlopt.h", "include/nlopt.h")
-        repository_ctx.symlink("/usr/include/nlopt.hpp", "include/nlopt.hpp")
+        repository_ctx.symlink("/opt/drake-dependencies/include/nlopt.h", "include/nlopt.h")
+        repository_ctx.symlink("/opt/drake-dependencies/include/nlopt.hpp", "include/nlopt.hpp")
     else:
         fail("Operating system is NOT supported {}".format(os_result))

diff --git a/tools/workspace/suitesparse/package.BUILD.bazel b/tools/workspace/suitesparse/package.BUILD.bazel
index 448e52293..dfc7332a8 100644
--- a/tools/workspace/suitesparse/package.BUILD.bazel
+++ b/tools/workspace/suitesparse/package.BUILD.bazel
@@ -16,6 +16,7 @@ cc_library(
     linkopts = [
         "-L" + LIBDIR,
         "-lamd",
+        "-lsuitesparseconfig",
     ],
     licenses = ["notice"],  # BSD-3-Clause
 )
diff --git a/tools/workspace/suitesparse/repository.bzl b/tools/workspace/suitesparse/repository.bzl
index 191067ee8..cb954f782 100644
--- a/tools/workspace/suitesparse/repository.bzl
+++ b/tools/workspace/suitesparse/repository.bzl
@@ -11,8 +11,8 @@ def _impl(repo_ctx):
     if os_result.error != None:
         fail(os_result.error)
     if os_result.is_ubuntu:
-        include = "/usr/include/suitesparse"
-        lib = "/usr/lib"
+        include = "/opt/drake-dependencies/include"
+        lib = "/opt/drake-dependencies/lib"
     elif os_result.is_macos:
         include = "/usr/local/opt/suite-sparse/include"
         lib = "/usr/local/opt/suite-sparse/lib"
diff --git a/tools/workspace/vtk/repository.bzl b/tools/workspace/vtk/repository.bzl
index 9c051225d..9aee12a72 100644
--- a/tools/workspace/vtk/repository.bzl
+++ b/tools/workspace/vtk/repository.bzl
@@ -65,21 +65,13 @@ def _vtk_cc_library(

     srcs = []

-    if os_result.is_macos:
-        if not header_only:
-            lib_dir = "/usr/local/opt/vtk@{}/lib".format(
-                VTK_MAJOR_MINOR_PATCH_VERSION,
-            )
-            linkopts = linkopts + [
-                "-L{}".format(lib_dir),
-                "-l{}-{}".format(name, VTK_MAJOR_MINOR_VERSION),
-                "-Wl,-rpath,{}".format(lib_dir),
-            ]
-    elif os_result.is_ubuntu:
-        if not header_only:
-            srcs = ["lib/lib{}-{}.so.1".format(name, VTK_MAJOR_MINOR_VERSION)]
-    else:
-        fail("Unknown os_result {}".format(os_result))
+    if not header_only:
+        lib_dir = "/opt/vtk/lib"
+        linkopts = linkopts + [
+            "-L{}".format(lib_dir),
+            "-l{}-{}".format(name, VTK_MAJOR_MINOR_VERSION),
+            "-Wl,-rpath,{}".format(lib_dir),
+        ]

     content = """
 cc_library(
@@ -100,34 +92,7 @@ def _impl(repository_ctx):
     if os_result.error != None:
         fail(os_result.error)

-    if os_result.is_macos:
-        repository_ctx.symlink("/usr/local/opt/vtk@{}/include".format(
-            VTK_MAJOR_MINOR_PATCH_VERSION,
-        ), "include")
-    elif os_result.is_ubuntu:
-        if os_result.ubuntu_release == "18.04":
-            archive = "vtk-8.2.0-1-python-3.6.9-qt-5.9.5-bionic-x86_64.tar.gz"
-            sha256 = "d8d8bd13605f065839942d47eb9d556d8aa3f55e5759eb424773d05c46e805ee"  # noqa
-        elif os_result.ubuntu_release == "20.04":
-            archive = "vtk-8.2.0-1-python-3.8.5-qt-5.12.8-focal-x86_64.tar.gz"
-            sha256 = "927811bbecb1537c7d46c2eb73112ee7d46caf5ff765b5b8951b624ddf7d2928"  # noqa
-        else:
-            fail("Operating system is NOT supported {}".format(os_result))
-
-        urls = [
-            x.format(archive = archive)
-            for x in repository_ctx.attr.mirrors.get("vtk")
-        ]
-        root_path = repository_ctx.path("")
-
-        repository_ctx.download_and_extract(
-            urls,
-            output = root_path,
-            sha256 = sha256,
-            type = "tar.gz",
-        )
-    else:
-        fail("Operating system is NOT supported {}".format(os_result))
+    repository_ctx.symlink("/opt/vtk/include", "include")

     file_content = """# -*- python -*-

@@ -653,9 +618,10 @@ licenses([
             ":vtkCommonTransforms",
             ":vtkRenderingCore",
             ":vtksys",
-            "@glew",
+            ":vtkglew",
             "@opengl",
         ],
+        linkopts = ['-lX11', '-lXt', '-lGLX'],
     )

     file_content += _vtk_cc_library(
@@ -676,7 +642,9 @@ licenses([
         deps = ["@zlib"],
     )

-    file_content += _vtk_cc_library(os_result, "vtksys")
+    file_content += _vtk_cc_library(os_result, "vtksys", linkopts=['-ldl'])
+
+    file_content += _vtk_cc_library(repository_ctx.os.name, "vtkglew")

     # Glob all files for the data dependency of //tools:drake_visualizer.
     file_content += """
@@ -687,12 +655,7 @@ filegroup(
 )
 """

-    if os_result.is_macos:
-        # Use Homebrew VTK.
-        files_to_install = []
-    else:
-        # Install all files.
-        files_to_install = [":vtk"]
+    files_to_install = []

     file_content += """
 load("@drake//tools/install:install.bzl", "install_files")
diff --git a/tools/workspace/yaml_cpp/repository.bzl b/tools/workspace/yaml_cpp/repository.bzl
index 7f41f9578..e0a227c46 100644
--- a/tools/workspace/yaml_cpp/repository.bzl
+++ b/tools/workspace/yaml_cpp/repository.bzl
@@ -16,7 +16,7 @@ def _impl(repository_ctx):
         )
     elif os_result.is_ubuntu:
         build_flavor = "ubuntu-{}".format(os_result.ubuntu_release)
-        repository_ctx.symlink("/usr/include/yaml-cpp", "include/yaml-cpp")
+        repository_ctx.symlink("/opt/drake-dependencies/include/yaml-cpp", "include/yaml-cpp")
     else:
         fail("Operating system is NOT supported {}".format(os_result))

diff --git a/bindings/pydrake/systems/lcm_py.cc b/bindings/pydrake/systems/lcm_py.cc
index d98b81c59..fb9bcd86c 100644
--- a/bindings/pydrake/systems/lcm_py.cc
+++ b/bindings/pydrake/systems/lcm_py.cc
@@ -216,7 +216,7 @@ PYBIND11_MODULE(lcm, m) {
 #pragma GCC diagnostic pop

   // Bind C++ serializers.
-  BindCppSerializers();
+  //BindCppSerializers();

   ExecuteExtraPythonCode(m);
 }
diff --git a/tools/py_toolchain/interpreter_paths.bzl b/tools/py_toolchain/interpreter_paths.bzl
index 1608e49b1..d6b5d5e07 100644
--- a/tools/py_toolchain/interpreter_paths.bzl
+++ b/tools/py_toolchain/interpreter_paths.bzl
@@ -2,13 +2,13 @@

 # Default value of interpreter_path used by the py_runtime in the default
 # Python toolchain registered on the @platforms//os:linux platform.
-LINUX_INTERPRETER_PATH = "/usr/bin/python3"
+LINUX_INTERPRETER_PATH = "/usr/local/bin/python"

 # Default value of interpreter_path used by the py_runtime in the Python debug
 # toolchain registered on the @platforms//os:linux platform when the
 # --extra_toolchains=//tools/py_toolchain:linux_dbg_toolchain command line
 # option is given.
-LINUX_DBG_INTERPRETER_PATH = "/usr/bin/python3-dbg"
+LINUX_DBG_INTERPRETER_PATH = "/usr/local/bin/python"

 # Default value of interpreter_path used by the py_runtime in the default
 # Python toolchain registered on the @platforms//os:osx platform.
